{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-26T01:38:56.908Z",
    "end": "2020-12-26T01:40:38.222Z",
    "duration": 101314,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5b127980-e3c2-4cf7-9b00-2fc7ea896fe1",
      "title": "",
      "fullFile": "cypress/integration/login.feature",
      "file": "cypress/integration/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d5062ded-4461-438b-ad7b-482a2002bbe8",
          "title": "Realizar Login no site",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Realizar Login",
              "fullTitle": "Realizar Login no site Realizar Login",
              "timedOut": null,
              "duration": 5678,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a79e59fd-50bd-44a4-a195-184f887efbf1",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Conta",
              "fullTitle": "Realizar Login no site Adicionar Conta",
              "timedOut": null,
              "duration": 7091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6543a493-7241-4eda-ac35-196618daa85e",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Movimentção de Receita na Conta",
              "fullTitle": "Realizar Login no site Adicionar Movimentção de Receita na Conta",
              "timedOut": null,
              "duration": 9406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1826d572-167a-413b-a90e-30fbe52308b4",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Movimentação de Receita Pendente na Conta",
              "fullTitle": "Realizar Login no site Adicionar Movimentação de Receita Pendente na Conta",
              "timedOut": null,
              "duration": 10926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8084ac9c-3734-469f-a3d4-93d35c5342fc",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Despesa na Conta do Itaú",
              "fullTitle": "Realizar Login no site Adicionar Despesa na Conta do Itaú",
              "timedOut": null,
              "duration": 10971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "43fbb7b4-1a0a-43d8-baad-ede74f8bc78d",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Saldo na Conta da Nubank",
              "fullTitle": "Realizar Login no site Adicionar Saldo na Conta da Nubank",
              "timedOut": null,
              "duration": 10733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ba0af30f-f26e-429a-9186-19ec28e97d9a",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adicionar Movimentação de Receita Pendente na Conta da Nubank",
              "fullTitle": "Realizar Login no site Adicionar Movimentação de Receita Pendente na Conta da Nubank",
              "timedOut": null,
              "duration": 10828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55813ce4-c13a-4dfc-925a-f070bf272e87",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remover Movimentação",
              "fullTitle": "Realizar Login no site Remover Movimentação",
              "timedOut": null,
              "duration": 6934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c1c32c95-1d40-4494-bab9-72b54c3ac168",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de erro na criação de conta com email já cadastrado",
              "fullTitle": "Realizar Login no site Validar mensagem de erro na criação de conta com email já cadastrado",
              "timedOut": null,
              "duration": 6288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2f5d6357-4bd7-438c-a5dc-56f4b8156984",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de erro na criação de usuário quando não preenche o nome",
              "fullTitle": "Realizar Login no site Validar mensagem de erro na criação de usuário quando não preenche o nome",
              "timedOut": null,
              "duration": 4975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3c95a94-7901-4620-88dc-62eded13544f",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de erro na criação de usuário quando não preenche o email",
              "fullTitle": "Realizar Login no site Validar mensagem de erro na criação de usuário quando não preenche o email",
              "timedOut": null,
              "duration": 4894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "59e68718-67fd-4ec7-8993-03f68e2914d8",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de erro na criação de usuário quando não preenche a senha",
              "fullTitle": "Realizar Login no site Validar mensagem de erro na criação de usuário quando não preenche a senha",
              "timedOut": null,
              "duration": 5076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "caee2302-7c48-449e-b1a9-9a996c4ad608",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de erro quando adiciona uma conta já cadastrada",
              "fullTitle": "Realizar Login no site Validar mensagem de erro quando adiciona uma conta já cadastrada",
              "timedOut": null,
              "duration": 6599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "72e90330-7428-4863-a613-c1711ba37f15",
              "parentUUID": "d5062ded-4461-438b-ad7b-482a2002bbe8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a79e59fd-50bd-44a4-a195-184f887efbf1",
            "6543a493-7241-4eda-ac35-196618daa85e",
            "1826d572-167a-413b-a90e-30fbe52308b4",
            "8084ac9c-3734-469f-a3d4-93d35c5342fc",
            "43fbb7b4-1a0a-43d8-baad-ede74f8bc78d",
            "ba0af30f-f26e-429a-9186-19ec28e97d9a",
            "55813ce4-c13a-4dfc-925a-f070bf272e87",
            "c1c32c95-1d40-4494-bab9-72b54c3ac168",
            "2f5d6357-4bd7-438c-a5dc-56f4b8156984",
            "d3c95a94-7901-4620-88dc-62eded13544f",
            "59e68718-67fd-4ec7-8993-03f68e2914d8",
            "caee2302-7c48-449e-b1a9-9a996c4ad608",
            "72e90330-7428-4863-a613-c1711ba37f15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100399,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "overwrite": false
      },
      "version": "5.1.0"
    }
  }
}